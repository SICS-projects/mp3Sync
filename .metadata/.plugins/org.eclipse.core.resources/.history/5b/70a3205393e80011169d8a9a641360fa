/**
 * 
 */
package JGApps.MP3Synch.Manager;

import java.util.ArrayList;
import java.util.Hashtable;
import java.util.List;

import com.sics_android_sdk.Comunication.HttpMetadataController;
import com.sics_android_sdk.Exceptions.HttpPortNotValidException;
import com.sics_android_sdk.Exceptions.WrongHttpReturnStateException;
import com.sics_android_sdk.Exceptions.WrongHttpServerURLException;
import com.sics_android_sdk.Manager.PreferencesManager;

import JGApps.MP3Synch.R;
import JGApps.MP3Synch.Container.SongData;
import JGApps.MP3Synch.Helper.ListConverter;
import JGApps.MP3Synch.Helper.XmlParser_old;

/**
 * @author joachim
 *
 */
public class HttpMetadataManager {
	public static List<SongData> getDataListFromServer() throws HttpPortNotValidException, WrongHttpReturnStateException, WrongHttpServerURLException{
		return null;
    	//TODO: Besseren namen finden fï¿½r PreferencesManagement
//		String httpServerURL = PreferencesManager.getPreferenceAsString(Global.getAppContext().getString(R.string.http_server_preference_host_key), "HTTP://", Global.getAppContext());
//		//Integer httpServerPort = Integer.parseInt(PreferencesManagment.getPreferenceAsString(Global.getAppContext().getString(R.string.ftp_server_preference_port_key), "0", Global.getAppContext()));
//		
//		HttpMetadataController httpController = new HttpMetadataController(httpServerURL);
//		List<Hashtable<String, Object>> dataAsHash = httpController.selectAsHash(null, null, null, null, null, null, null);
//		
//		ListConverter converter = new ListConverter(dataAsHash); 
//		return converter.convertToSongDataList();
	}

	
}
